version: '3'

services:
  server:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    # image: 463482854100.dkr.ecr.us-east-1.amazonaws.com/django-ec2:web
    container_name: finez_server
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - finez_network
    volumes:
      - ./backend/:/usr/src/app/
    expose:
      - 8000
 
    depends_on:
      - db
  
  db:
    image: postgres:13-alpine
    container_name: finez_db
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # env_file:
    #   - ./.env.staging.db

  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    image: 463482854100.dkr.ecr.us-east-1.amazonaws.com/django-ec2:web
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    # env_file:
    #   - ./.env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

networks:
  finez_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
